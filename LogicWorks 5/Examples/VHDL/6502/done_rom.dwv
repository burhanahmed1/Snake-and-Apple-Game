library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;
library work;
use work.microcode.all;

entity DONE_rom is
    port (addr       :in std_logic_vector (10 downto 0);
          DONE       :out MCT_DONE
         );
end DONE_rom;


architecture DONE_rom_arch of DONE_rom is
begin
  process (addr)
  begin
    case addr is
        when "01101101011" =>    DONE <= MC_DONE;
        when "01111101011" =>    DONE <= MC_DONE;
        when "01111001011" =>    DONE <= MC_DONE;
        when "01101001001" =>    DONE <= MC_DONE;
        when "01100001101" =>    DONE <= MC_DONE;
        when "01110001101" =>    DONE <= MC_DONE;
        when "01100101010" =>    DONE <= MC_DONE;
        when "01110101010" =>    DONE <= MC_DONE;
        when "00101101011" =>    DONE <= MC_DONE;
        when "00111101011" =>    DONE <= MC_DONE;
        when "00111001011" =>    DONE <= MC_DONE;
        when "00101001001" =>    DONE <= MC_DONE;
        when "00100001101" =>    DONE <= MC_DONE;
        when "00110001101" =>    DONE <= MC_DONE;
        when "00100101010" =>    DONE <= MC_DONE;
        when "00110101010" =>    DONE <= MC_DONE;
        when "00001110110" =>    DONE <= MC_DONE;
        when "00011110110" =>    DONE <= MC_DONE;
        when "00001010000" =>    DONE <= MC_DONE;
        when "00000110101" =>    DONE <= MC_DONE;
        when "00010110101" =>    DONE <= MC_DONE;
        when "10010000010" =>    DONE <= MC_DONE;
        when "10110000010" =>    DONE <= MC_DONE;
        when "11110000010" =>    DONE <= MC_DONE;
        when "00101100011" =>    DONE <= MC_DONE;
        when "00100100010" =>    DONE <= MC_DONE;
        when "00110000010" =>    DONE <= MC_DONE;
        when "11010000010" =>    DONE <= MC_DONE;
        when "00010000010" =>    DONE <= MC_DONE;
        when "00000000101" =>    DONE <= MC_DONE;
        when "01010000010" =>    DONE <= MC_DONE;
        when "01110000010" =>    DONE <= MC_DONE;
        when "00011000000" =>    DONE <= MC_DONE;
        when "11011000000" =>    DONE <= MC_DONE;
        when "01011000000" =>    DONE <= MC_DONE;
        when "10111000000" =>    DONE <= MC_DONE;
        when "11001101011" =>    DONE <= MC_DONE;
        when "11011101011" =>    DONE <= MC_DONE;
        when "11011001011" =>    DONE <= MC_DONE;
        when "11001001001" =>    DONE <= MC_DONE;
        when "11000001101" =>    DONE <= MC_DONE;
        when "11010001101" =>    DONE <= MC_DONE;
        when "11000101010" =>    DONE <= MC_DONE;
        when "11010101010" =>    DONE <= MC_DONE;
        when "11101100011" =>    DONE <= MC_DONE;
        when "11100000001" =>    DONE <= MC_DONE;
        when "11100100010" =>    DONE <= MC_DONE;
        when "11001100011" =>    DONE <= MC_DONE;
        when "11000000001" =>    DONE <= MC_DONE;
        when "11000100010" =>    DONE <= MC_DONE;
        when "11001110110" =>    DONE <= MC_DONE;
        when "11011110110" =>    DONE <= MC_DONE;
        when "11000110101" =>    DONE <= MC_DONE;
        when "11010110101" =>    DONE <= MC_DONE;
        when "11001010000" =>    DONE <= MC_DONE;
        when "10001000000" =>    DONE <= MC_DONE;
        when "01001101011" =>    DONE <= MC_DONE;
        when "01011101011" =>    DONE <= MC_DONE;
        when "01011001011" =>    DONE <= MC_DONE;
        when "01001001001" =>    DONE <= MC_DONE;
        when "01000001101" =>    DONE <= MC_DONE;
        when "01010001101" =>    DONE <= MC_DONE;
        when "01000101010" =>    DONE <= MC_DONE;
        when "01010101010" =>    DONE <= MC_DONE;
        when "11101110110" =>    DONE <= MC_DONE;
        when "11111110110" =>    DONE <= MC_DONE;
        when "11100110101" =>    DONE <= MC_DONE;
        when "11110110101" =>    DONE <= MC_DONE;
        when "11101000000" =>    DONE <= MC_DONE;
        when "11001000000" =>    DONE <= MC_DONE;
        when "01001100011" =>    DONE <= MC_DONE;
        when "01101100110" =>    DONE <= MC_DONE;
        when "00100000011" =>    DONE <= MC_DONE;
        when "10101101011" =>    DONE <= MC_DONE;
        when "10111101011" =>    DONE <= MC_DONE;
        when "10111001011" =>    DONE <= MC_DONE;
        when "10101001001" =>    DONE <= MC_DONE;
        when "10100101010" =>    DONE <= MC_DONE;
        when "10100001101" =>    DONE <= MC_DONE;
        when "10110001101" =>    DONE <= MC_DONE;
        when "10110101010" =>    DONE <= MC_DONE;
        when "10101110011" =>    DONE <= MC_DONE;
        when "10111110011" =>    DONE <= MC_DONE;
        when "10100010001" =>    DONE <= MC_DONE;
        when "10100110010" =>    DONE <= MC_DONE;
        when "10110110010" =>    DONE <= MC_DONE;
        when "10101100011" =>    DONE <= MC_DONE;
        when "10111100011" =>    DONE <= MC_DONE;
        when "10100000001" =>    DONE <= MC_DONE;
        when "10100100010" =>    DONE <= MC_DONE;
        when "10110100010" =>    DONE <= MC_DONE;
        when "01001110110" =>    DONE <= MC_DONE;
        when "01011110110" =>    DONE <= MC_DONE;
        when "01001010000" =>    DONE <= MC_DONE;
        when "01000110101" =>    DONE <= MC_DONE;
        when "01010110101" =>    DONE <= MC_DONE;
        when "11101010000" =>    DONE <= MC_DONE;
        when "00001101011" =>    DONE <= MC_DONE;
        when "00011101011" =>    DONE <= MC_DONE;
        when "00011001011" =>    DONE <= MC_DONE;
        when "00001001001" =>    DONE <= MC_DONE;
        when "00000001101" =>    DONE <= MC_DONE;
        when "00010001101" =>    DONE <= MC_DONE;
        when "00000101010" =>    DONE <= MC_DONE;
        when "00010101010" =>    DONE <= MC_DONE;
        when "01001000001" =>    DONE <= MC_DONE;
        when "00001000001" =>    DONE <= MC_DONE;
        when "01101000010" =>    DONE <= MC_DONE;
        when "00101000010" =>    DONE <= MC_DONE;
        when "00000011100" =>    DONE <= MC_DONE;
        when "00101110110" =>    DONE <= MC_DONE;
        when "00111110110" =>    DONE <= MC_DONE;
        when "00101010000" =>    DONE <= MC_DONE;
        when "00100110101" =>    DONE <= MC_DONE;
        when "00110110101" =>    DONE <= MC_DONE;
        when "01101110110" =>    DONE <= MC_DONE;
        when "01111110110" =>    DONE <= MC_DONE;
        when "01101010000" =>    DONE <= MC_DONE;
        when "01100110101" =>    DONE <= MC_DONE;
        when "01110110101" =>    DONE <= MC_DONE;
        when "01000000110" =>    DONE <= MC_DONE;
        when "01100000110" =>    DONE <= MC_DONE;
        when "11101101011" =>    DONE <= MC_DONE;
        when "11111101011" =>    DONE <= MC_DONE;
        when "11111001011" =>    DONE <= MC_DONE;
        when "11101001001" =>    DONE <= MC_DONE;
        when "11100001101" =>    DONE <= MC_DONE;
        when "11110001101" =>    DONE <= MC_DONE;
        when "11100101010" =>    DONE <= MC_DONE;
        when "11110101010" =>    DONE <= MC_DONE;
        when "00111000000" =>    DONE <= MC_DONE;
        when "11111000000" =>    DONE <= MC_DONE;
        when "01111000000" =>    DONE <= MC_DONE;
        when "10001101011" =>    DONE <= MC_DONE;
        when "10011001011" =>    DONE <= MC_DONE;
        when "10000001101" =>    DONE <= MC_DONE;
        when "10010001101" =>    DONE <= MC_DONE;
        when "10000101010" =>    DONE <= MC_DONE;
        when "10010101010" =>    DONE <= MC_DONE;
        when "10011101011" =>    DONE <= MC_DONE;
        when "01000011110" =>    DONE <= MC_DONE;
        when "00110011110" =>    DONE <= MC_DONE;
        when "10001110011" =>    DONE <= MC_DONE;
        when "10000110010" =>    DONE <= MC_DONE;
        when "10010110010" =>    DONE <= MC_DONE;
        when "10001100011" =>    DONE <= MC_DONE;
        when "10000100010" =>    DONE <= MC_DONE;
        when "10010100010" =>    DONE <= MC_DONE;
        when "10101010000" =>    DONE <= MC_DONE;
        when "10101000000" =>    DONE <= MC_DONE;
        when "10111010000" =>    DONE <= MC_DONE;
        when "10001010000" =>    DONE <= MC_DONE;
        when "10011010000" =>    DONE <= MC_DONE;
        when "10011000000" =>    DONE <= MC_DONE;
        when others =>    DONE <= MC_NOP;
    end case;
  end process;
end DONE_rom_arch;
