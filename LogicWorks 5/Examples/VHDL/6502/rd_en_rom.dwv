library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;
library work;
use work.microcode.all;

entity RD_EN_rom is
    port (addr       :in std_logic_vector (10 downto 0);
          RD_EN      :out MCT_RD_EN
         );
end RD_EN_rom;


architecture RD_EN_rom_arch of RD_EN_rom is
begin
  process (addr)
  begin
    case addr is
        when "01101101000" =>    RD_EN <= MC_READ;
        when "01101101010" =>    RD_EN <= MC_READ;
        when "01111101000" =>    RD_EN <= MC_READ;
        when "01111101010" =>    RD_EN <= MC_READ;
        when "01111001000" =>    RD_EN <= MC_READ;
        when "01111001010" =>    RD_EN <= MC_READ;
        when "01100001001" =>    RD_EN <= MC_READ;
        when "01100001010" =>    RD_EN <= MC_READ;
        when "01100001100" =>    RD_EN <= MC_READ;
        when "01110001001" =>    RD_EN <= MC_READ;
        when "01110001010" =>    RD_EN <= MC_READ;
        when "01110001100" =>    RD_EN <= MC_READ;
        when "01100101001" =>    RD_EN <= MC_READ;
        when "01110101001" =>    RD_EN <= MC_READ;
        when "00101101000" =>    RD_EN <= MC_READ;
        when "00101101010" =>    RD_EN <= MC_READ;
        when "00111101000" =>    RD_EN <= MC_READ;
        when "00111101010" =>    RD_EN <= MC_READ;
        when "00111001000" =>    RD_EN <= MC_READ;
        when "00111001010" =>    RD_EN <= MC_READ;
        when "00100001001" =>    RD_EN <= MC_READ;
        when "00100001010" =>    RD_EN <= MC_READ;
        when "00100001100" =>    RD_EN <= MC_READ;
        when "00110001001" =>    RD_EN <= MC_READ;
        when "00110001010" =>    RD_EN <= MC_READ;
        when "00110001100" =>    RD_EN <= MC_READ;
        when "00100101001" =>    RD_EN <= MC_READ;
        when "00110101001" =>    RD_EN <= MC_READ;
        when "00001110000" =>    RD_EN <= MC_READ;
        when "00001110010" =>    RD_EN <= MC_READ;
        when "00011110000" =>    RD_EN <= MC_READ;
        when "00011110010" =>    RD_EN <= MC_READ;
        when "00000110001" =>    RD_EN <= MC_READ;
        when "00010110001" =>    RD_EN <= MC_READ;
        when "00101100000" =>    RD_EN <= MC_READ;
        when "00101100010" =>    RD_EN <= MC_READ;
        when "00100100001" =>    RD_EN <= MC_READ;
        when "00000000000" =>    RD_EN <= MC_READ;
        when "00000000001" =>    RD_EN <= MC_READ;
        when "11001101000" =>    RD_EN <= MC_READ;
        when "11001101010" =>    RD_EN <= MC_READ;
        when "11011101000" =>    RD_EN <= MC_READ;
        when "11011101010" =>    RD_EN <= MC_READ;
        when "11011001000" =>    RD_EN <= MC_READ;
        when "11011001010" =>    RD_EN <= MC_READ;
        when "11000001001" =>    RD_EN <= MC_READ;
        when "11000001010" =>    RD_EN <= MC_READ;
        when "11000001100" =>    RD_EN <= MC_READ;
        when "11010001001" =>    RD_EN <= MC_READ;
        when "11010001010" =>    RD_EN <= MC_READ;
        when "11010001100" =>    RD_EN <= MC_READ;
        when "11000101001" =>    RD_EN <= MC_READ;
        when "11010101001" =>    RD_EN <= MC_READ;
        when "11101100000" =>    RD_EN <= MC_READ;
        when "11101100010" =>    RD_EN <= MC_READ;
        when "11100100001" =>    RD_EN <= MC_READ;
        when "11001100000" =>    RD_EN <= MC_READ;
        when "11001100010" =>    RD_EN <= MC_READ;
        when "11000100001" =>    RD_EN <= MC_READ;
        when "11001110000" =>    RD_EN <= MC_READ;
        when "11001110010" =>    RD_EN <= MC_READ;
        when "11011110000" =>    RD_EN <= MC_READ;
        when "11011110010" =>    RD_EN <= MC_READ;
        when "11000110001" =>    RD_EN <= MC_READ;
        when "11010110001" =>    RD_EN <= MC_READ;
        when "01001101000" =>    RD_EN <= MC_READ;
        when "01001101010" =>    RD_EN <= MC_READ;
        when "01011101000" =>    RD_EN <= MC_READ;
        when "01011101010" =>    RD_EN <= MC_READ;
        when "01011001000" =>    RD_EN <= MC_READ;
        when "01011001010" =>    RD_EN <= MC_READ;
        when "01000001001" =>    RD_EN <= MC_READ;
        when "01000001010" =>    RD_EN <= MC_READ;
        when "01000001100" =>    RD_EN <= MC_READ;
        when "01010001001" =>    RD_EN <= MC_READ;
        when "01010001010" =>    RD_EN <= MC_READ;
        when "01010001100" =>    RD_EN <= MC_READ;
        when "01000101001" =>    RD_EN <= MC_READ;
        when "01010101001" =>    RD_EN <= MC_READ;
        when "11101110000" =>    RD_EN <= MC_READ;
        when "11101110010" =>    RD_EN <= MC_READ;
        when "11111110000" =>    RD_EN <= MC_READ;
        when "11111110010" =>    RD_EN <= MC_READ;
        when "11100110001" =>    RD_EN <= MC_READ;
        when "11110110001" =>    RD_EN <= MC_READ;
        when "01001100000" =>    RD_EN <= MC_READ;
        when "01101100000" =>    RD_EN <= MC_READ;
        when "01101100010" =>    RD_EN <= MC_READ;
        when "01101100011" =>    RD_EN <= MC_READ;
        when "00100000000" =>    RD_EN <= MC_READ;
        when "10101101000" =>    RD_EN <= MC_READ;
        when "10101101010" =>    RD_EN <= MC_READ;
        when "10111101000" =>    RD_EN <= MC_READ;
        when "10111101010" =>    RD_EN <= MC_READ;
        when "10111001000" =>    RD_EN <= MC_READ;
        when "10111001010" =>    RD_EN <= MC_READ;
        when "10100101001" =>    RD_EN <= MC_READ;
        when "10100001001" =>    RD_EN <= MC_READ;
        when "10100001010" =>    RD_EN <= MC_READ;
        when "10100001100" =>    RD_EN <= MC_READ;
        when "10110001001" =>    RD_EN <= MC_READ;
        when "10110001010" =>    RD_EN <= MC_READ;
        when "10110001100" =>    RD_EN <= MC_READ;
        when "10110101001" =>    RD_EN <= MC_READ;
        when "10101110000" =>    RD_EN <= MC_READ;
        when "10101110010" =>    RD_EN <= MC_READ;
        when "10111110000" =>    RD_EN <= MC_READ;
        when "10111110010" =>    RD_EN <= MC_READ;
        when "10100110001" =>    RD_EN <= MC_READ;
        when "10110110001" =>    RD_EN <= MC_READ;
        when "10101100000" =>    RD_EN <= MC_READ;
        when "10101100010" =>    RD_EN <= MC_READ;
        when "10111100000" =>    RD_EN <= MC_READ;
        when "10111100010" =>    RD_EN <= MC_READ;
        when "10100100001" =>    RD_EN <= MC_READ;
        when "10110100001" =>    RD_EN <= MC_READ;
        when "01001110000" =>    RD_EN <= MC_READ;
        when "01001110010" =>    RD_EN <= MC_READ;
        when "01011110000" =>    RD_EN <= MC_READ;
        when "01011110010" =>    RD_EN <= MC_READ;
        when "01000110001" =>    RD_EN <= MC_READ;
        when "01010110001" =>    RD_EN <= MC_READ;
        when "00001101000" =>    RD_EN <= MC_READ;
        when "00001101010" =>    RD_EN <= MC_READ;
        when "00011101000" =>    RD_EN <= MC_READ;
        when "00011101010" =>    RD_EN <= MC_READ;
        when "00011001000" =>    RD_EN <= MC_READ;
        when "00011001010" =>    RD_EN <= MC_READ;
        when "00000001001" =>    RD_EN <= MC_READ;
        when "00000001010" =>    RD_EN <= MC_READ;
        when "00000001100" =>    RD_EN <= MC_READ;
        when "00010001001" =>    RD_EN <= MC_READ;
        when "00010001010" =>    RD_EN <= MC_READ;
        when "00010001100" =>    RD_EN <= MC_READ;
        when "00000101001" =>    RD_EN <= MC_READ;
        when "00010101001" =>    RD_EN <= MC_READ;
        when "01101000001" =>    RD_EN <= MC_READ;
        when "00101000001" =>    RD_EN <= MC_READ;
        when "00000011000" =>    RD_EN <= MC_READ;
        when "00000011001" =>    RD_EN <= MC_READ;
        when "00101110000" =>    RD_EN <= MC_READ;
        when "00101110010" =>    RD_EN <= MC_READ;
        when "00111110000" =>    RD_EN <= MC_READ;
        when "00111110010" =>    RD_EN <= MC_READ;
        when "00100110001" =>    RD_EN <= MC_READ;
        when "00110110001" =>    RD_EN <= MC_READ;
        when "01101110000" =>    RD_EN <= MC_READ;
        when "01101110010" =>    RD_EN <= MC_READ;
        when "01111110000" =>    RD_EN <= MC_READ;
        when "01111110010" =>    RD_EN <= MC_READ;
        when "01100110001" =>    RD_EN <= MC_READ;
        when "01110110001" =>    RD_EN <= MC_READ;
        when "01000000001" =>    RD_EN <= MC_READ;
        when "01000000010" =>    RD_EN <= MC_READ;
        when "01000000011" =>    RD_EN <= MC_READ;
        when "01100000001" =>    RD_EN <= MC_READ;
        when "01100000010" =>    RD_EN <= MC_READ;
        when "11101101000" =>    RD_EN <= MC_READ;
        when "11101101010" =>    RD_EN <= MC_READ;
        when "11111101000" =>    RD_EN <= MC_READ;
        when "11111101010" =>    RD_EN <= MC_READ;
        when "11111001000" =>    RD_EN <= MC_READ;
        when "11111001010" =>    RD_EN <= MC_READ;
        when "11100001001" =>    RD_EN <= MC_READ;
        when "11100001010" =>    RD_EN <= MC_READ;
        when "11100001100" =>    RD_EN <= MC_READ;
        when "11110001001" =>    RD_EN <= MC_READ;
        when "11110001010" =>    RD_EN <= MC_READ;
        when "11110001100" =>    RD_EN <= MC_READ;
        when "11100101001" =>    RD_EN <= MC_READ;
        when "11110101001" =>    RD_EN <= MC_READ;
        when "10001101000" =>    RD_EN <= MC_READ;
        when "10011001000" =>    RD_EN <= MC_READ;
        when "10000001001" =>    RD_EN <= MC_READ;
        when "10000001010" =>    RD_EN <= MC_READ;
        when "10010001001" =>    RD_EN <= MC_READ;
        when "10010001010" =>    RD_EN <= MC_READ;
        when "10011101000" =>    RD_EN <= MC_READ;
        when "01000011000" =>    RD_EN <= MC_READ;
        when "01000011001" =>    RD_EN <= MC_READ;
        when "00110011000" =>    RD_EN <= MC_READ;
        when "00110011001" =>    RD_EN <= MC_READ;
        when "10001110000" =>    RD_EN <= MC_READ;
        when "10001100000" =>    RD_EN <= MC_READ;
        when others =>    RD_EN <= MC_NOP;
    end case;
  end process;
end RD_EN_rom_arch;

